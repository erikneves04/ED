Ao analisar o código c9.c, é possivel observar que na função main é chamada a função f que aloca dinamicamente um vetor com 10 posições (variando de 0 a 9) e tenta acessar a posição 10, que não existe. Além disso, esse buffer não é liberado.

Ao utilizar a ferramenta valgrind, tive essa resposta:
==4408== HEAP SUMMARY:
==4408==     in use at exit: 40 bytes in 1 blocks
==4408==   total heap usage: 1 allocs, 0 frees, 40 bytes allocated
==4408== 
==4408== 40 bytes in 1 blocks are definitely lost in loss record 1 of 1
==4408==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==4408==    by 0x10915E: f (in /home/gabriella/Documents/ED/ED/Task-03/executavel)
==4408==    by 0x109180: main (in /home/gabriella/Documents/ED/ED/Task-03/executavel)
==4408== 
==4408== LEAK SUMMARY:
==4408==    definitely lost: 40 bytes in 1 blocks
==4408==    indirectly lost: 0 bytes in 0 blocks
==4408==      possibly lost: 0 bytes in 0 blocks
==4408==    still reachable: 0 bytes in 0 blocks
==4408==         suppressed: 0 bytes in 0 blocks
==4408== 
==4408== For lists of detected and suppressed errors, rerun with: -s
==4408== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)                  

confirmando que uma posição inválida é acessada e o buffer não é liberado.

Para corrigir o código, mudei o comando de x[10] = 0; para x[9] = 0; e acrescentei free(x);

Ao utilizar o valgrind novamente, tive essa resposta: ==4394== HEAP SUMMARY:
==4394==     in use at exit: 0 bytes in 0 blocks
==4394==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated
==4394== 
==4394== All heap blocks were freed -- no leaks are possible
==4394== 
==4394== For lists of detected and suppressed errors, rerun with: -s
==4394== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
