Ao analisar o código c5.c, é possivel observar que o vetor intArray é alocado dinamicamente, porém, esse buffer nuncdo.a é libera

Ao utilizar a ferramenta valgrind, tive essa resposta: 
==3743== HEAP SUMMARY:
==3743==     in use at exit: 4,000 bytes in 1 blocks
==3743==   total heap usage: 2 allocs, 1 frees, 5,024 bytes allocated
==3743== 
==3743== 4,000 bytes in 1 blocks are definitely lost in loss record 1 of 1
==3743==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3743==    by 0x1091E7: main (in /home/gabriella/Documents/ED/ED/Task-03/executavel)
==3743== 
==3743== LEAK SUMMARY:
==3743==    definitely lost: 4,000 bytes in 1 blocks
==3743==    indirectly lost: 0 bytes in 0 blocks
==3743==      possibly lost: 0 bytes in 0 blocks
==3743==    still reachable: 0 bytes in 0 blocks
==3743==         suppressed: 0 bytes in 0 blocks
==3743== 
==3743== For lists of detected and suppressed errors, rerun with: -s
==3743== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

confirmando que ele realmente não foi liberado.

Para corrigir o código, acrescentei um free(intArray); no final, assim, a memória é liberada.

Ao utilizar o valgrind novamente, tive essa resposta: ==3840== HEAP SUMMARY:
==3840==     in use at exit: 0 bytes in 0 blocks
==3840==   total heap usage: 2 allocs, 2 frees, 5,024 bytes allocated
==3840== 
==3840== All heap blocks were freed -- no leaks are possible
==3840== 
==3840== For lists of detected and suppressed errors, rerun with: -s
==3840== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
